src/medit/ilists.c:233: error: NULL_DEREFERENCE
  pointer `outv` last assigned on line 232 could be null and is dereferenced by call to `fprintf()` at line 233, column 2.
Showing all 23 steps of the trace


src/medit/ilists.c:201:1: start of procedure listTetraIso()
199.   
200.   /* build lists for iso-surfaces */
201. > GLuint listTetraIso(pScene sc,pMesh mesh) {
202.     FILE      *outv,*outf;
203.     GLuint     dlist = 0;

src/medit/ilists.c:203:3: 
201.   GLuint listTetraIso(pScene sc,pMesh mesh) {
202.     FILE      *outv,*outf;
203. >   GLuint     dlist = 0;
204.     pTetra     pt;
205.     pPoint     p0,p1;

src/medit/ilists.c:211:3: 
209.     float      iso,n[3],cx[4],cy[4],cz[4],cc;
210.     int        m,k,k1,k2,i,l,pos[4],neg[4],nbpos,nbneg,nbnul,nv,nf;
211. >   static double hsv[3]   = { 0.0f, 1.0f, 0.80f };
212.     static int tn[4] = {0,0,1,1};
213.     static int tp[4] = {0,1,1,0};

src/medit/ilists.c:212:3: 
210.     int        m,k,k1,k2,i,l,pos[4],neg[4],nbpos,nbneg,nbnul,nv,nf;
211.     static double hsv[3]   = { 0.0f, 1.0f, 0.80f };
212. >   static int tn[4] = {0,0,1,1};
213.     static int tp[4] = {0,1,1,0};
214.   

src/medit/ilists.c:213:3: 
211.     static double hsv[3]   = { 0.0f, 1.0f, 0.80f };
212.     static int tn[4] = {0,0,1,1};
213. >   static int tp[4] = {0,1,1,0};
214.   
215.     /* default */

src/medit/ilists.c:216:9: Taking false branch
214.   
215.     /* default */
216.     if ( !mesh->ntet || !mesh->nbb || mesh->typage == 1 )  return(0);
               ^
217.     if ( ddebug ) printf("create iso-values map list / TETRA\n");
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);

src/medit/ilists.c:216:24: Taking false branch
214.   
215.     /* default */
216.     if ( !mesh->ntet || !mesh->nbb || mesh->typage == 1 )  return(0);
                              ^
217.     if ( ddebug ) printf("create iso-values map list / TETRA\n");
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);

src/medit/ilists.c:216:37: Taking false branch
214.   
215.     /* default */
216.     if ( !mesh->ntet || !mesh->nbb || mesh->typage == 1 )  return(0);
                                           ^
217.     if ( ddebug ) printf("create iso-values map list / TETRA\n");
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);

src/medit/ilists.c:217:8: Taking true branch
215.     /* default */
216.     if ( !mesh->ntet || !mesh->nbb || mesh->typage == 1 )  return(0);
217.     if ( ddebug ) printf("create iso-values map list / TETRA\n");
              ^
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);
219.     delta = sc->iso.val[MAXISO-1] - sc->iso.val[0];

src/medit/ilists.c:217:17: 
215.     /* default */
216.     if ( !mesh->ntet || !mesh->nbb || mesh->typage == 1 )  return(0);
217. >   if ( ddebug ) printf("create iso-values map list / TETRA\n");
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);
219.     delta = sc->iso.val[MAXISO-1] - sc->iso.val[0];

src/medit/ilists.c:218:8: Condition is true
216.     if ( !mesh->ntet || !mesh->nbb || mesh->typage == 1 )  return(0);
217.     if ( ddebug ) printf("create iso-values map list / TETRA\n");
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);
              ^
219.     delta = sc->iso.val[MAXISO-1] - sc->iso.val[0];
220.   

src/medit/ilists.c:218:8: Condition is true
216.     if ( !mesh->ntet || !mesh->nbb || mesh->typage == 1 )  return(0);
217.     if ( ddebug ) printf("create iso-values map list / TETRA\n");
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);
              ^
219.     delta = sc->iso.val[MAXISO-1] - sc->iso.val[0];
220.   

src/medit/ilists.c:218:8: Taking false branch
216.     if ( !mesh->ntet || !mesh->nbb || mesh->typage == 1 )  return(0);
217.     if ( ddebug ) printf("create iso-values map list / TETRA\n");
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);
              ^
219.     delta = sc->iso.val[MAXISO-1] - sc->iso.val[0];
220.   

src/medit/ilists.c:219:3: 
217.     if ( ddebug ) printf("create iso-values map list / TETRA\n");
218.     if ( egal(sc->iso.val[0],sc->iso.val[MAXISO-1]) )  return(0);
219. >   delta = sc->iso.val[MAXISO-1] - sc->iso.val[0];
220.   
221.     /* build display list */

src/medit/ilists.c:222:3: Skipping glGenLists(): function or method not found
220.   
221.     /* build display list */
222.     dlist = glGenLists(1);
         ^
223.     glNewList(dlist,GL_COMPILE);
224.     if ( glGetError() )  return(0);

src/medit/ilists.c:223:3: Skipping glNewList(): function or method not found
221.     /* build display list */
222.     dlist = glGenLists(1);
223.     glNewList(dlist,GL_COMPILE);
         ^
224.     if ( glGetError() )  return(0);
225.   

src/medit/ilists.c:224:8: Taking false branch
222.     dlist = glGenLists(1);
223.     glNewList(dlist,GL_COMPILE);
224.     if ( glGetError() )  return(0);
              ^
225.   
226.     /* build list */

src/medit/ilists.c:227:3: Skipping glEnable(): function or method not found
225.   
226.     /* build list */
227.     glEnable(GL_BLEND);
         ^
228.     glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
229.     glDepthMask(GL_FALSE);

src/medit/ilists.c:228:3: Skipping glBlendFunc(): function or method not found
226.     /* build list */
227.     glEnable(GL_BLEND);
228.     glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
         ^
229.     glDepthMask(GL_FALSE);
230.   

src/medit/ilists.c:229:3: Skipping glDepthMask(): function or method not found
227.     glEnable(GL_BLEND);
228.     glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
229.     glDepthMask(GL_FALSE);
         ^
230.   
231.     if (ddebug) {

src/medit/ilists.c:231:7: Taking true branch
229.     glDepthMask(GL_FALSE);
230.   
231.     if (ddebug) {
             ^
232.   	outv = fopen("vertex.mesh","w");
233.   	fprintf(outv,"MeshVersionFormatted 1\n Dimension\n 3\n\nVertices\n \n");

src/medit/ilists.c:232:2: 
230.   
231.     if (ddebug) {
232. > 	outv = fopen("vertex.mesh","w");
233.   	fprintf(outv,"MeshVersionFormatted 1\n Dimension\n 3\n\nVertices\n \n");
234.   	outf = fopen("faces.mesh2","w");

src/medit/ilists.c:233:2: 
231.     if (ddebug) {
232.   	outv = fopen("vertex.mesh","w");
233. > 	fprintf(outv,"MeshVersionFormatted 1\n Dimension\n 3\n\nVertices\n \n");
234.   	outf = fopen("faces.mesh2","w");
235.   	fprintf(outv,"Triangles\n \n");
