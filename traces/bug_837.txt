src/fflib/lgmat.cpp:2284: error: NULL_DEREFERENCE
  pointer `ee` last assigned on line 2282 could be null and is dereferenced at line 2284, column 11.
Showing all 22 steps of the trace


src/fflib/lgmat.cpp:2276:23: start of procedure RawMatrix
2274.   }   
2275.   
2276.   template<typename R>  RawMatrix<R>::RawMatrix(const basicAC_F0 & args,int iinit)
                              ^
2277.   : init(iinit)
2278.   {

src/fflib/lgmat.cpp:2298:24: Skipping E_F0: function or method not found
2296.   	coef=to<KN_<R> >(ee[2]);
2297.   	lig=to<KN_<long> >(ee[0]);
2298.   	col=to<KN_<long> >(ee[1]);
                               ^
2299.   	
2300.       }

src/fflib/lgmat.cpp:2277:3: 
2275.   
2276.   template<typename R>  RawMatrix<R>::RawMatrix(const basicAC_F0 & args,int iinit)
2277. > : init(iinit)
2278.   {
2279.       args.SetNameParam();

src/fflib/lgmat.cpp:2279:5: 
2277.   : init(iinit)
2278.   {
2279. >     args.SetNameParam();
2280.       emat = args[0];
2281.       

src/fflib/AFunction2.cpp:1001:1: start of procedure SetNameParam
  999.   }
  1000.   
  1001. > void basicAC_F0::SetNameParam(int n,name_and_type *l , Expression * e) const 
  1002.   {
  1003.    int k=0;

src/fflib/AFunction2.cpp:1003:2: 
  1001.   void basicAC_F0::SetNameParam(int n,name_and_type *l , Expression * e) const 
  1002.   {
  1003. >  int k=0;
  1004.    if ( !n && !named_parameter)  return;
  1005.    

src/fflib/AFunction2.cpp:1004:8: Taking true branch
  1002.   {
  1003.    int k=0;
  1004.    if ( !n && !named_parameter)  return;
                 ^
  1005.    
  1006.     for (int i=0;i<n;i++)

src/fflib/AFunction2.cpp:1004:14: Taking false branch
  1002.   {
  1003.    int k=0;
  1004.    if ( !n && !named_parameter)  return;
                       ^
  1005.    
  1006.     for (int i=0;i<n;i++)

src/fflib/AFunction2.cpp:1006:8: 
  1004.    if ( !n && !named_parameter)  return;
  1005.    
  1006. >   for (int i=0;i<n;i++)
  1007.     {
  1008.        C_F0  ce=find(l[i].name) ;

src/fflib/AFunction2.cpp:1006:16: Loop condition is false. Leaving loop
  1004.    if ( !n && !named_parameter)  return;
  1005.    
  1006.     for (int i=0;i<n;i++)
                         ^
  1007.     {
  1008.        C_F0  ce=find(l[i].name) ;

src/fflib/AFunction2.cpp:1027:7: Taking false branch
  1025.     }
  1026.     
  1027.    if (!named_parameter) return;
                ^
  1028.     
  1029.     if ((size_t) k!=  named_parameter->size()) 

src/fflib/AFunction2.cpp:1029:7: Taking true branch
  1027.    if (!named_parameter) return;
  1028.     
  1029.     if ((size_t) k!=  named_parameter->size()) 
                ^
  1030.      {
  1031.         cout << " Sorry some name parameter are not used!  found" <<  k << " == " << named_parameter->size() <<endl;

src/fflib/AFunction2.cpp:1031:7: Skipping operator<<: function or method not found
  1029.     if ((size_t) k!=  named_parameter->size()) 
  1030.      {
  1031.         cout << " Sorry some name parameter are not used!  found" <<  k << " == " << named_parameter->size() <<endl;
                ^
  1032.         for(const_iterator ii=named_parameter->begin(); ii != named_parameter->end();ii++)
  1033.          {

src/fflib/AFunction2.cpp:1032:11: Skipping _Rb_tree_const_iterator: function or method not found
  1030.      {
  1031.         cout << " Sorry some name parameter are not used!  found" <<  k << " == " << named_parameter->size() <<endl;
  1032.         for(const_iterator ii=named_parameter->begin(); ii != named_parameter->end();ii++)
                    ^
  1033.          {
  1034.           for (int i=0;i<n;i++)

src/fflib/AFunction2.cpp:1032:55: Loop condition is false. Leaving loop
  1030.      {
  1031.         cout << " Sorry some name parameter are not used!  found" <<  k << " == " << named_parameter->size() <<endl;
  1032.         for(const_iterator ii=named_parameter->begin(); ii != named_parameter->end();ii++)
                                                                ^
  1033.          {
  1034.           for (int i=0;i<n;i++)

src/fflib/AFunction2.cpp:1040:10: Taking false branch
  1038.           L1:;
  1039.          }
  1040.       if ( n && mpirank==0) {
                   ^
  1041.       cerr << " The named parameter can be " << endl;
  1042.       for (int i=0;i<n;i++)

src/fflib/AFunction2.cpp:1045:5: Skipping CompileError(): function or method not found
  1043.          cerr << "\t" << l[i].name << " =  <" << l[i].type->name() << ">\n";
  1044.       }
  1045.       CompileError("Unused named parameter");  
              ^
  1046.      }
  1047.   }

src/fflib/AFunction2.cpp:1029:3: 
  1027.    if (!named_parameter) return;
  1028.     
  1029. >   if ((size_t) k!=  named_parameter->size()) 
  1030.      {
  1031.         cout << " Sorry some name parameter are not used!  found" <<  k << " == " << named_parameter->size() <<endl;

src/fflib/AFunction2.cpp:1047:1: return from a call to basicAC_F0_SetNameParam
  1045.       CompileError("Unused named parameter");  
  1046.      }
  1047. > }
  1048.   
  1049.   

src/fflib/lgmat.cpp:2280:5: Skipping operator_E_F0_*: function or method not found
2278.   {
2279.       args.SetNameParam();
2280.       emat = args[0];
            ^
2281.       
2282.       const E_Array & ee= *dynamic_cast<const E_Array*>((Expression) args[1]);

src/fflib/lgmat.cpp:2282:5: Skipping operator_E_F0_*: function or method not found
2280.       emat = args[0];
2281.       
2282.       const E_Array & ee= *dynamic_cast<const E_Array*>((Expression) args[1]);
            ^
2283.       
2284.       int N=ee.size();

src/fflib/lgmat.cpp:2284:5: 
2282.       const E_Array & ee= *dynamic_cast<const E_Array*>((Expression) args[1]);
2283.       
2284. >     int N=ee.size();
2285.       if (N==1)
2286.       {
